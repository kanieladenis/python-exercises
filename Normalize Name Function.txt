import keyword

def check_beginning_and_end(string):
    ''' ensures input username begins and ends with a valid character'''
    
    # while the first character in the string is not an alphabet character delete that character and check again
    while string[0].isalpha() == False:
        
        string = string[1:]
        
    # while the last character in the string is not an alphabet numeric character delete that character and check again
    while string[-1].isalnum() == False:
    
        string = string[:-1]
        
    return string

def handle_special_characters(string):
    ''' remove special characters from string and swap out spaces for underscores'''
    
    # set new_string to 
    new_string = ''
    
    # itterate through string 
    for char in string:
    
        # if character is alfanumeric 
        if char.isalnum() == True:
        
            # add character to the end of new_string
            new_string += char
        
        # if character is space or underscore 
        elif char in ' _':
        
            # add underscore to the end of new string
            new_string += '_'
            
    return new_string

def is_keyword(string):
    ''' return True or False if string is a keyword'''

    # check if result is a keyword
    if string in keyword.kwlist:
        
        return True
    
    else:
    
        return False
    
def normalize_name(string):
    '''transform input string into a valid python identifier.
       if result is a python keyword return try again message instead'''
    
    # delete non-valid characters at the beginning and end on the string
    string = check_beginning_and_end(string)
    
    # replace space characters with underscores with remove special characters
    string = handle_special_characters(string)
    
    # return lowercase user name if not a keyword 
    if not is_keyword(string):
        
        return string.lower()
    
    else:
        
        print("Result is a python key word. Please try again")
        return normalize_name(input())